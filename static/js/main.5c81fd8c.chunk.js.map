{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhl_logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/sity_planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","components/AirQuality/AirQuality.js","utils/useScreenSize.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logosImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","centeredSlides","slidesPerGroup","SectorItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","Footer","partners","author","designer","partnersLogos","logo","navLinks","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","LocationInfo","useEffect","console","log","Map","container","current","center","ref","useScreenSize","window","screen","size","setSize","handleResize","addEventListener","removeEventListener","App","shidLogo","ITNLogo","gcLogo","require","sectors","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5c81fd8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhl_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.05494e5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.6a925988.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.f6b33149.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.4f70b1ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.4e538524.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.f58a519c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.53381405.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sity_planing.9c75db8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.34ea2627.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.83468281.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a496ce23.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\n\r\nconst HeroBlock = ({ title, links, logos }) => {\r\n    const logosImages = logos.map((logoItem, i) => < img src = { logoItem } alt = \"partner-logo\" className=\"hero-partners-item\" key ={i}/>);\r\n    const navItems = links.map((link, i) => < a href = {link.href} className=\"hero-navigation-item\" key ={i}>{ link.title }</a>);\r\n\r\n    return ( \r\n        <section className=\"hero\">   \r\n   <div className =\"container\" >\r\n        <div className=\"hero-partners\">\r\n       { logosImages } \r\n       </div > \r\n       <nav className=\"hero-navigator\"> \r\n       {navItems} \r\n       </nav> \r\n       <h1 className = \"hero-title\" > { title } </h1> \r\n       <a href = \"#\" className = \"hero-link\"> Отследить </a> \r\n       </div >\r\n       </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\nimport './Facts.scss';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n              <img src={item.imgUrl} alt=\"slide image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n           </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts.js\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\nconst Facts = ({title, slides}) => {\r\nconst factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n<SlideFacts item={slideInfo} />\r\n</SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n         <h2 className=\"facts-title\">{title}</h2>\r\n         <div className=\"swiper-button-prev\"/>\r\n         <Swiper\r\n         navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n          pagination={{\r\n                      el:'.facts-pagination',\r\n                      clickable: false,\r\n                  renderBullet:function(index, className) {\r\n                      return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                  },\r\n              }}         \r\n          spaceBetween={40}\r\n          slidesPerView={3}\r\n          centeredSlides={false}\r\n          slidesPerGroup={3}\r\n\r\n         >\r\n        {factsSlides}\r\n         </Swiper>\r\n         <div className=\"swiper-button-next\"/>\r\n         <div className=\"facts-pagination\"/>\r\n       </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n\tconst [isToolTipShowing, setToolTipShowing] = useState(false);\r\n\tconst [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n\tconst toggleToolTip = (newValue) =>\r\n\t  {\r\n\t\tsetDirectionSwitched(number % 3 === 0);\r\n\t\tsetToolTipShowing(newValue);\r\n\t\t}\r\n\t\t\r\n\t// const toggleToolTip = () => {\r\n\t// \tsetToolTipShowing(\r\n\t// \t\t!isToolTipShowing\r\n\t// \t)\r\n\t// }\r\n\t\r\n\treturn (\r\n\t\t<div className=\"sectors-list-item\"\r\n\t\t\t\t onMouseEnter={() => toggleToolTip(true)}\r\n\t\t\t\t onMouseLeave={() => toggleToolTip(false)}\r\n\t\t\t\t style={{\r\n\t\t\t\t\t background: `url(${sector.imgUrl}) center no-repeat`,\r\n\t\t\t\t\t backgroundSize: 'cover'\r\n\t\t\t\t }}>\r\n\t\t\t<p className=\"sectors-list-item-name\">\r\n\t\t\t\t{sector.name}\r\n\t\t\t</p>\r\n\t\t\t{\r\n\t\t\t\tisToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n\t\t\t\t\tisDirectionSwitched\r\n\t\t\t\t\t\t? \"sectors-list-item-tooltip-switched\"\r\n\t\t\t\t\t\t: \"\"\r\n\t\t\t\t}`}>\r\n\t\t\t\t\t{sector.description}\r\n\t\t\t\t</p>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport './SectorsList.scss';\r\nimport SectorItem from './SectorItem';\r\n\r\nconst SectorsList = ({title, subtitle, items}) => {\r\n\tconst itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i}/>)\r\n\t\r\n\treturn (\r\n\t\t<section className=\"sectors container\">\r\n\t\t\t<h2 className=\"sectors-title\">{title}</h2>\r\n\t\t\t<p className=\"sectors-subtitle\">{subtitle}</p>\r\n\t\t\t<div className=\"sectors-list\">\r\n\t\t\t\t{itemsList}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SectorsList;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\n     const Footer = ({partners, links, author, designer}) => {\r\n     const partnersLogos = partners.map((logo, i) => <img key ={i} src ={logo} alt ={'partner logo'} className =\"footer-partners-item\"/>);\r\n     const navLinks = links.map((link, i) => <a href ={link.href} key ={i} className ={'footer-nav-link'}>{link.title}</a>)\r\nreturn (\r\n    <footer className=\"footer\">\r\n\t  <div className=\"container\">\r\n\t\t<div className=\"footer-partners\">\r\n\t\t{partnersLogos}</div>\r\n\t\t\t\t\r\n     <div className=\"footer-text-wrap\">\r\n\t\t<div className=\"footer-nav\">\r\n\t\t{navLinks}</div>\r\n\t\t\t\t\t\r\n\t<p className=\"footer-nav-text\">\r\n\tСайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n\t</p>\r\n\t</div>\r\n\t\t\t\t\r\n    \t<p className=\"footer-text\">2020, Все права защищены</p>\r\n\t\t<p className=\"footer-text\">Согласие на обработку персональных данных <br/>Политика конфиденциальности</p>\r\n\t</div>\r\n\r\n   </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useRef, useState } from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoia29seWFuMjVsayIsImEiOiJja2ZwdmJib28wOThkMzNycHp0ZTF2aG5lIn0.1hPHVj5MHUlF1OXTXpJ_FA';\r\n\r\nfunction AirQuality() {\r\n    const mapContainer =useRef(null);\r\n    const [LocationInfo, setLocationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 4.6\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(mapContainer);\r\n        const map = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: 'mapbox://styles/mapbox/outdoors-v11',\r\n        center: [LocationInfo.lng, LocationInfo.lat],\r\n        zoom: LocationInfo.zoom\r\n        });\r\n        },[]) \r\n\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 className = \"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n            <p className = \"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AirQuality\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst useScreenSize = () => {\r\nconst [size, setSize] = useState({...window.screen\r\n})\r\n\r\nuseEffect(() => {\r\n    const handleResize = () => setSize({...window.screen\r\n    });\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return window.removeEventListener('resize', handleResize);\r\n}, [\r\n   ])\r\n\r\nreturn size;\r\n}\r\n\r\nexport default useScreenSize;","import React from 'react';\nimport './App.scss';\nimport HeroBlock from './components/HeroBlock/HeroBlock.js';\nimport Facts from './components/Facts/Facts.js';\nimport SectorsList from './components/SectorsList/SectorsList.js';\nimport gcLogo from './assets/GC_logo.svg';\nimport ITNLogo from './assets/ITN_logo.svg';\nimport shidLogo from './assets/shid_emozhl_logo.svg';\nimport Footer from './components/Footer/Footer.js';\nimport AirQuality from './components/AirQuality/AirQuality.js';\nimport useScreenSize from './utils/useScreenSize';\n\n\nfunction App() {\n    const sizeObj = [useScreenSize()];\n\n    const partners = [\n        shidLogo,\n        ITNLogo,\n        gcLogo,\n\n    ];\n    const navLinks = [{\n            title: \"Основные факты\",\n            href: \"#facts\"\n        },\n        {\n            title: \"Индекс качества воздуха\",\n            href: \"#quality\"\n        },\n        {\n            title: \"Политика по уменьшению загрязнений\",\n            href: \"#politics\"\n        }\n    ];\n    const factsSlides = [\n        {\n            id: '1332',\n         imgUrl: require (\"./assets/facts-slider/slide-1.jpg\"),\n         desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n    },\n    {\n        id: '133',\n        imgUrl: require (\"./assets/facts-slider/slide-2.jpg\"),\n        desc: \"Защитники окружающей среды подвергаются преследованиям\"\n   },\n   {\n    id: '1334',\n    imgUrl: require (\"./assets/facts-slider/slide-3.jpg\"),\n    desc: \"Загрязнение воздуха – нарушение прав человека\"\n},\n{\n    id: '1335',\n    imgUrl: require (\"./assets/facts-slider/slide-4.jpg\"),\n    desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\n},\n{\n    id: '1336',\n    imgUrl: require (\"./assets/facts-slider/slide-5.jpg\"),\n    desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n},\n\n];\n    const sectors = [\n    {\n         name: \"Промышленность\",\n         imgUrl: require('./assets/sectors/industry.jpg'),\n         description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n    },\n    {\n         name: \"Транспорт\",\n         imgUrl: require('./assets/sectors/transport.jpg'),\n         description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n    },\n    {\n         name: \"Городское планирование\",\n         imgUrl: require('./assets/sectors/sity_planing.jpg'),\n         description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n    },\n    {\n         name: \"Энергия\",\n         imgUrl: require('./assets/sectors/energy.jpg'),\n         description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n    },\n    {\n         name: \"Энергетика\",\n         imgUrl: require('./assets/sectors/energetics.jpg'),\n         description: \"Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n    },\n    {\n         name: \"Утилизация отходов\",\n         imgUrl: require('./assets/sectors/utilisation.jpg'),\n         description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n    },\n];\n    const author = \"Николаем Довгим\";\n\n\tconst designer = \"Валерией Бубырь\";\n\n    return ( <>\n    <HeroBlock title = \"Качество атмосферного воздуха и здоровье\"\n        logos = { partners }\n        links = { navLinks }/>\n    <Facts title=\"Основные факты\" slides = {factsSlides}/>\n    <AirQuality/>\n    <SectorsList title= \"Политика по уменьшению загрязнений\" subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\" \n    items=\n    {sectors}/>\n    <Footer links={navLinks} partners={partners} author={author} designer={designer}/> \n\n    </>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}